{"version":3,"file":"static/js/58.ccee6129.chunk.js","mappings":"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","sources":["clock.js"],"sourcesContent":["import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction Clock() {\r\n  const [location, setLocation] = useState({ latitude: '', longitude: '' });\r\n  const [weather, setWeather] = useState({ description: '-', temperature: '-°C' });\r\n  const [time, setTime] = useState({ hour: '-', minute: '-', second: '-', ampm: '-' });\r\n  const [date, setDate] = useState({ day: '-', date: '-', month: '-'});\r\n  const [battery, setBattery] = useState('-%');\r\n  const [batteryIndicator, setBatteryIndicator] = useState('-');\r\n\r\n  useEffect(() => {\r\n\r\n    const fetchLocation = () => {\r\n      navigator.geolocation.getCurrentPosition(position => { \r\n        let latitude = position.coords.latitude\r\n        let longitude = position.coords.longitude\r\n        setLocation({latitude,longitude})\r\n      })\r\n    }\r\n\r\n    const fetchData = () => {\r\n      fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${location.latitude}&lon=${location.longitude}&appid=5dbc9f8305c168560a9ced7e34292794`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          let description = data.weather[0].description;\r\n          let temperature = (data.main.temp - 273.15).toFixed(0) + '°C';\r\n          setWeather({ description, temperature });\r\n          console.log(\"Weather data fetched successfully!\");\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching weather data:\", error);\r\n        });\r\n    };\r\n\r\n    const updateTime = () => {\r\n      const currentDate = new Date();\r\n      let ampm = 'AM';\r\n      let hour = currentDate.getHours();\r\n      if (hour > 12) {\r\n        hour = String(currentDate.getHours() - 12).padStart(2, '0');\r\n        ampm = 'PM';\r\n      }\r\n      if (hour === 0) {\r\n        hour = 12;\r\n      }\r\n      const minute = String(currentDate.getMinutes()).padStart(2, '0');\r\n      const second = String(currentDate.getSeconds()).padStart(2, '0');\r\n      setTime({ hour, minute, second, ampm });\r\n    };\r\n\r\n    const updateDate = () => {\r\n      const currentDate = new Date();\r\n      let date = currentDate.getDate();\r\n      let month,day;\r\n      switch(currentDate.getDay()) {\r\n        case 0:\r\n          day = 'Sunday';\r\n          break;\r\n        case 1:\r\n          day = 'Monday';\r\n          break;\r\n        case 2:\r\n          day = 'Tuesday';\r\n          break;\r\n        case 3:\r\n          day = 'Wednesday';\r\n          break;\r\n        case 4:\r\n          day = 'Thursday';\r\n          break;\r\n        case 5:\r\n          day = 'Friday';\r\n          break;\r\n        case 6:\r\n          day = 'Saturday';\r\n          break;\r\n        default :\r\n          day = '-';\r\n      }\r\n      switch (currentDate.getMonth()) {\r\n        case 0:\r\n          month = 'Jan';\r\n          break;\r\n        case 1:\r\n          month = 'Feb';\r\n          break;\r\n        case 2:\r\n          month = 'Mar';\r\n          break;\r\n        case 3:\r\n          month = 'Apr';\r\n          break;\r\n        case 4:\r\n          month = 'May';\r\n          break;\r\n        case 5:\r\n          month = 'Jun';\r\n          break;\r\n        case 6:\r\n          month = 'JUL';\r\n          break;\r\n        case 7:\r\n          month = 'Aug';\r\n          break;\r\n        case 8:\r\n          month = 'Sep';\r\n          break;\r\n        case 9:\r\n          month = 'Oct';\r\n          break;\r\n        case 10:\r\n          month = 'Nov';\r\n          break;\r\n        case 11:\r\n          month = 'Dec';\r\n          break;\r\n        default:\r\n          month = '-';\r\n      }\r\n      setDate({ day, date, month});\r\n    };\r\n\r\n    const fetchBatteryStatus = () => {\r\n      if ('getBattery' in navigator) {\r\n        navigator.getBattery().then(battery => {\r\n          const batteryStatus = () => {\r\n            let batteryPercentage = (battery.level * 100).toFixed(0) + '%';\r\n            setBattery(batteryPercentage);\r\n            let chargingStatus = battery.charging;\r\n            if (battery.level * 100 >= 90) \r\n              chargingStatus ? setBatteryIndicator('battery_charging_full') : setBatteryIndicator('battery_full');\r\n            else if (battery.level * 100 >= 70) \r\n              chargingStatus ? setBatteryIndicator('battery_charging_90') : setBatteryIndicator('battery_5_bar');\r\n            else if (battery.level * 100 >= 60) \r\n              chargingStatus ? setBatteryIndicator('battery_charging_80') : setBatteryIndicator('battery_4_bar');\r\n            else if (battery.level * 100 >= 50) \r\n              chargingStatus ? setBatteryIndicator('battery_charging_50') : setBatteryIndicator('battery_3_bar');\r\n            else if (battery.level * 100 >= 30) \r\n              chargingStatus ? setBatteryIndicator('battery_charging_30') : setBatteryIndicator('battery_2_bar');\r\n            else if (battery.level * 100 >= 20) \r\n              chargingStatus ? setBatteryIndicator('battery_charging_20') : setBatteryIndicator('battery_1_bar');\r\n            else if (battery.level * 100 >= 10) \r\n              chargingStatus ? setBatteryIndicator('battery_charging_20') : setBatteryIndicator('battery_alert');\r\n            else\r\n              chargingStatus ? setBatteryIndicator('battery_charging_20') : setBatteryIndicator('battery_0_bar');\r\n\r\n          };\r\n          battery.addEventListener('levelchange', batteryStatus);\r\n          batteryStatus();\r\n        });\r\n      }\r\n    };\r\n  \r\n    fetchLocation();\r\n    fetchData();\r\n    updateDate();\r\n    fetchBatteryStatus();\r\n\r\n    const timeIntervalId = setInterval(updateTime, 1000);\r\n    const dateIntervalId = setInterval(updateDate, 60000);\r\n\r\n\r\n    return () => {\r\n      clearInterval(timeIntervalId);\r\n      clearInterval(dateIntervalId);\r\n    };\r\n  }, [location.latitude, location.longitude]);\r\n\r\n  return (\r\n    <>\r\n      <section className='h-screen w-screen bg-[#323434] flex-col hidden md:flex'>\r\n        <div className='h-fit w-fit m-auto rounded-lg shadow-lg bg-[#f4f0f0]'>\r\n          <div className='h-fit p-4 py-6 bg-[#40c5e1] flex  justify-between rounded-t-lg'>\r\n            <div className='flex w-fit h-14 justify-center items-center text-5xl text-[#eaeaea] space-x-4 pl-6'>\r\n              <p>{date.month}</p>\r\n              <p>{date.date}</p>\r\n            </div>\r\n            <div className='flex items-end pb-1 h-14 text-[1.5rem] text-[#eaeaea] pr-6'>\r\n              <div>{date.day}</div>\r\n            </div>\r\n          </div>\r\n          <div className='w-fit h-fit p-4 py-8 flex justify-center items-center space-x-6 text-[#5F6368] pl-4 pr-6'>\r\n            <div className='h-fit w-fit relative'>\r\n              <svg className=\"size-56\">\r\n                <circle className=\"bar\" cx=\"110\" cy=\"110\" r=\"90\" strokeWidth=\"5\" stroke='#dce7eb' fill='transparent'  />\r\n                <circle className=\"bar\" cx=\"110\" cy=\"110\" r=\"90\" strokeWidth=\"5\" stroke='#40c5e1' fill='transparent' strokeDasharray={`${time.hour/12*180*3.14},1000`}  />\r\n              </svg>\r\n              <p className='absolute left-16 top-16 text-7xl w-24 text-center'>{time.hour}</p>\r\n              <p className='absolute left-16 w-24 text-center bottom-16'>HOURS</p>\r\n            </div>\r\n            <div className='h-fit w-fit relative'>\r\n              <svg className=\"size-56\">\r\n                <circle className=\"bar\" cx=\"110\" cy=\"110\" r=\"90\" strokeWidth=\"5\" stroke='#dce7eb' fill='transparent'  />\r\n                <circle className=\"bar\" cx=\"110\" cy=\"110\" r=\"90\" strokeWidth=\"5\" stroke='#40c5e1' fill='transparent' strokeDasharray={`${time.minute/60*180*3.14},1000`}  />\r\n              </svg>\r\n              <p className='absolute left-16 top-16 text-7xl w-24 text-center'>{time.minute}</p>\r\n              <p className='absolute left-16 w-24 text-center bottom-16'>MINUTES</p>\r\n            </div>\r\n            <div className='h-fit w-fit relative'>\r\n              <svg className=\"size-56\">\r\n                <circle className=\"bar\" cx=\"110\" cy=\"110\" r=\"90\" strokeWidth=\"5\" stroke='#dce7eb' fill='transparent'  />\r\n                <circle className=\"bar\" cx=\"110\" cy=\"110\" r=\"90\" strokeWidth=\"5\" stroke='#40c5e1' fill='transparent' strokeDasharray={`${time.second/60*180*3.14},1000`}  />\r\n              </svg>\r\n              <p className='absolute left-16 top-16 text-7xl w-24 text-center'>{time.second}</p>\r\n              <p className='absolute left-16 w-24 text-center bottom-16'>SECONDS</p>\r\n            </div>\r\n            <div className='h-56 w-fit'>\r\n              <p className='text-4xl w-14 text-center mt-4'>{time.ampm}</p>\r\n            </div>\r\n          </div>\r\n          <div className='h-fit p-4 py-8 flex justify-between rounded-b-lg text-3xl font-semibold text-[#5F6368]'>\r\n            <div className='flex h-fit'>\r\n              <span class='material-symbols-outlined text-3xl pl-6'>{batteryIndicator}</span>\r\n              <p className='tracking-wide font-semibold'>{battery}</p>\r\n            </div>\r\n            <div className='h-fit w-fit flex items-center space-x-4 pr-6'>\r\n              <p>{weather.temperature}</p>\r\n              <p className='capitalize'>{weather.description}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/*mbl screen */}\r\n      <section className='h-screen w-screen flex justify-center items-center bg-[#323434] md:hidden'>\r\n        <div className='relative h-fit w-5/6 py-8'>\r\n          <div className='static h-fit w-full bg-[#f1f1f1] rounded-lg shadow-lg'>\r\n            <div className='absolute bg-[#40c5e2] text-[#f1f1f1] text-r-time bg-white items-baseline flex right-3 top-4 shadow-md rounded-lg px-2 py-4 '>\r\n              <p>{time.hour}</p>\r\n              <p>:</p>\r\n              <p>{time.minute}</p>\r\n              <p>:</p>\r\n              <p>{time.second}</p>\r\n              <p className='text-r-am pl-px'>{time.ampm}</p>\r\n            </div>\r\n            <div className='h-fit p-4 text-[#5F6368]'>\r\n              <div className='flex space-x-1 text-r-date font-bold p-2'>\r\n                <p>{date.month}</p>\r\n                <p>{date.date}</p>\r\n              </div>\r\n              <p className='px-3 text-r-day'>{date.day}</p>\r\n            </div>\r\n            <div className='flex bg-[#40c5e1] text-gray-600 mt-5 rounded-b-md justify-between text-r-bot items-end p-4 space-x-6'>\r\n              <div className='flex items-end'>\r\n                <div className='flex h-fit items-center'>\r\n                  <span class='material-symbols-outlined text-r-bat pb-1'>{batteryIndicator}</span>\r\n                  <p className='tracking-wide font-semibold'>{battery}</p>\r\n                </div>\r\n              </div>\r\n              <div className='flex flex-wrap justify-end space-x-2 font-medium h-fit'>\r\n                <p className='tracking-tighter'>{weather.temperature}</p>\r\n                <p className='capitalize text-end'>{weather.description}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Clock;\r\n"],"names":["location","setLocation","useState","latitude","longitude","weather","setWeather","description","temperature","time","setTime","hour","minute","second","ampm","date","setDate","day","month","battery","setBattery","batteryIndicator","setBatteryIndicator","useEffect","updateDate","currentDate","Date","getDate","getDay","getMonth","navigator","geolocation","getCurrentPosition","position","coords","fetch","concat","then","response","json","data","main","temp","toFixed","console","log","catch","error","getBattery","batteryStatus","batteryPercentage","level","chargingStatus","charging","addEventListener","timeIntervalId","setInterval","updateTime","getHours","String","padStart","getMinutes","getSeconds","dateIntervalId","clearInterval","_jsxs","_Fragment","children","_jsx","className","cx","cy","r","strokeWidth","stroke","fill","strokeDasharray","class"],"sourceRoot":""}